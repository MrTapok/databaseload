package org.spbu.window;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.spbu.datageneration.DatabaseFiller;
import org.spbu.provider.DataProvider;
import org.spbu.service.Convertor;
import org.spbu.service.UserService;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;

public class UserForm extends JFrame {
    private JPanel rootPanel;
    private JTextField nameField;
    private JTextField surnameField;
    private JTextField patronymicField;
    private JRadioButton mRadioButton;
    private JRadioButton wRadioButton;
    private JButton addButton;
    private JButton checkInputButton;
    private JTextArea textArea1;
    private JTextArea textArea2;
    private JTextArea textArea3;

    private DatabaseFiller databaseFiller = new DatabaseFiller();
    private DataProvider dataProvider = new DataProvider();
    private UserService userService = new UserService();
    private ArrayList<String> m_names;
    private ArrayList<String> f_names;
    private ArrayList<String> m_surnames;
    private ArrayList<String> f_surnames;
    private ArrayList<String> m_patronymics;
    private ArrayList<String> f_patronymics;

    public UserForm() {

        super("PassportWork");
        setSize(400, 500);
        dataProvider.getConnection();
        try {
            m_names = dataProvider.getNames(true);
            f_names = dataProvider.getNames(false);
            m_surnames = dataProvider.getSurnames(true);
            f_surnames = dataProvider.getSurnames(false);
            m_patronymics = dataProvider.getPatronymics(true);
            f_patronymics = dataProvider.getPatronymics(false);
        } catch (SQLException e) {
            e.printStackTrace();
        }
        setContentPane(rootPanel);
        pack();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
        addButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {

            }
        });
        checkInputButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                ArrayList<String> a_name = new ArrayList<String>();
                ArrayList<String> a_surname = new ArrayList<String>();
                ArrayList<String> a_patronymic = new ArrayList<String>();
                String a_names = "";
                String a_surnames = "";
                String a_patronymics = "";
                char[] name = Convertor.convertStringToChar(nameField.getText());
                char[] surname = Convertor.convertStringToChar(surnameField.getText());
                char[] patronymic = Convertor.convertStringToChar(patronymicField.getText());
                if (mRadioButton.isSelected()) {
                    a_name = userService.checkWriting(5, name, m_names);
                    a_surname = userService.checkWriting(5, surname, m_surnames);
                    a_patronymic = userService.checkWriting(5, patronymic, m_patronymics);
                } else {
                    a_name = userService.checkWriting(5, name, f_names);
                    a_surname = userService.checkWriting(5, surname, f_surnames);
                    a_patronymic = userService.checkWriting(5, patronymic, f_patronymics);
                }
                for (int i = 0; i < a_name.size(); i++) {
                    a_names = a_names + a_name.get(i) + "\n";
                }
                for (int i = 0; i < a_surname.size(); i++) {
                    a_surnames = a_surnames + a_surname.get(i) + "\n";
                }
                for (int i = 0; i < a_patronymic.size(); i++) {
                    a_patronymics = a_patronymics + a_patronymic.get(i) + "\n";
                }
                textArea1.setText(a_names);
                textArea2.setText(a_surnames);
                textArea3.setText(a_patronymics);
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(6, 7, new Insets(0, 0, 0, 0), -1, -1));
        rootPanel.setBackground(new Color(-1379853));
        nameField = new JTextField();
        rootPanel.add(nameField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer1 = new Spacer();
        rootPanel.add(spacer1, new GridConstraints(2, 6, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        rootPanel.add(spacer2, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        surnameField = new JTextField();
        rootPanel.add(surnameField, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        patronymicField = new JTextField();
        rootPanel.add(patronymicField, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer3 = new Spacer();
        rootPanel.add(spacer3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        mRadioButton = new JRadioButton();
        mRadioButton.setText("M");
        rootPanel.add(mRadioButton, new GridConstraints(2, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        wRadioButton = new JRadioButton();
        wRadioButton.setText("W");
        rootPanel.add(wRadioButton, new GridConstraints(2, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText(" - Имя -");
        rootPanel.add(label1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("- Введите ФИО -");
        rootPanel.add(label2, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("- Фамилия -");
        rootPanel.add(label3, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("- Отчество -");
        rootPanel.add(label4, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        addButton = new JButton();
        addButton.setText("Add");
        rootPanel.add(addButton, new GridConstraints(3, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        checkInputButton = new JButton();
        checkInputButton.setText("Check Input");
        rootPanel.add(checkInputButton, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textArea1 = new JTextArea();
        rootPanel.add(textArea1, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        textArea2 = new JTextArea();
        rootPanel.add(textArea2, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        textArea3 = new JTextArea();
        rootPanel.add(textArea3, new GridConstraints(4, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
